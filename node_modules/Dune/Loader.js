var debug = require("Dune/Debug");
module.exports = Loader;

Image.prototype.moveToCoord = function(point) {
  var image = this;

  if (debug.speed) image.speed = debug.speed;

  if (arguments.length > 1) {
    throw new Error("Coordinate must be a single argument")
    return;
  }

  if (!image.canvas) {
    throw new Error("Image has no canvas property");
    return;
  }

  if (!image.canvas.redraw) {
    throw new Error("Image canvas has no redraw property");
    return;
  }

  if (!image.speed) {
    throw new Error("Image has no speed property");
    return;
  }

  if (image.xPos === undefined || image.yPos === undefined) {
    throw new Error("Image has no [x/y]Pos property");
    return;
  }


  var finalX = point[0],
      finalY = point[1];

  image.xStep = (finalX - image.xPos) * image.speed;
  image.yStep = (finalY - image.yPos) * image.speed;

  image.movement = setInterval(function () {
    image.animateMovement([finalX, finalY]);
  }, 10);

}

Image.prototype.animateMovement = function(point) {
  var image = this;

  var canvas = image.canvas;
  var context = canvas.getContext("2d");

  var x = point[0];
  var y = point[1];

  image.xPos += image.xStep;
  image.yPos += image.yStep;

  canvas.redraw();
  context.drawImage(image, 
    image.xPos, image.yPos,
    image.width, image.height
  );


  if (
    image.yStep > 0 && image.yPos + image.yStep >= y ||
    image.yStep < 0 && image.yPos + image.yStep <= y || 
    image.xStep > 0 && image.xPos + image.xStep >= x ||
    image.xStep < 0 && image.xPos + image.xStep <= x
  )
  {
    clearInterval(image.movement);
    delete image.movement;
    delete image.xStep;
    delete image.yStep;

    image.xPos = x
    image.yPos = y

    canvas.redraw();
    context.drawImage(image, 
      image.xPos, image.yPos,
      image.width, image.height
    );

    if (this.onHalt) {
      var onHalt = this.onHalt;
      delete this.onHalt;
      onHalt();
    }

  }
}

function Loader() {

    var isLoaded = true,
        assetsLoaded = 0, 
        assetsToLoad = 0, 
        loadingScreen = document.getElementById('loadingscreen'),
	loadingMessage = document.getElementById('loadingmessage');

    var that = this;
    
    this.loadImage = function(url) {
      assetsToLoad++;
      this.isLoaded = false;

      var loadingScreen = document.getElementById('loadingscreen');
      loadingScreen.style.display = "block";

      var image = new Image();

      image.src = url;
      image.xPos = 0;
      image.yPos = 0;
      image.speed = 0.01;
      image.onload = this.itemLoaded;

      return image;
    };

    this.itemLoaded = function () {
      assetsLoaded++;

      loadingMessage.innerHTML = 
	'isLoaded '+assetsLoaded+' of '+assetsToLoad;

      if (assetsLoaded == assetsToLoad){
	this.isLoaded = true;

	hideLoadingScreen();

	//and call the object onload method if it exists
	if(that.onload){
	    that.onload();
	    that.onload = undefined;
	}
      }
    }

    function hideLoadingScreen() {
      loadingScreen.style.display = "none";
    }
}
