module.exports = ArrakisMap;

function ArrakisMap() {
  var my = this;
  var cache = {};

  my.getTerritory = function(territoryName) {

    if (! cache[territoryName]) {
      var territory = getArrakisTerritory(territoryName);
      territory.map = this;
      cache[territoryName] = territory;
    }

    return cache[territoryName];
  }


  return my;
}

function getArrakisTerritory(territoryName) {

  switch(territoryName) {
    case "PolarSink":
      return new PolarSink();
    case "CielagoNorth":
      return new CielagoNorth();
    case "CielagoEast":
      return new CielagoEast();
    case "CielagoDepression":
      return new CielagoDepression();
    case "CielagoWest":
      return new CielagoWest();
    case "Arsunt":
      return new Arsunt();
    case "ImperialBasin":
      return new ImperialBasin();
    case "FalseWallEast":
      return new FalseWallEast();
    case "FalseWallSouth":
      return new FalseWallSouth();
    case "HargPass":
      return new HargPass();
    case "WindPassNorth":
      return new WindPassNorth();
    case "WindPass":
      return new WindPass();
    case "HaggaBasin":
      return new HaggaBasin();
    case "Carthag":
      return new Carthag();
    case "Tsimpo":
      return new Tsimpo();
    case "PlasticBasin":
      return new PlasticBasin();
    case "ShieldWall":
      return new ShieldWall();
    case "TheMinorErg":
      return new TheMinorErg();
    case "OldGap":
      return new OldGap();
    case "FalseWallWest":
      return new FalseWallWest();
    case "Arrakeen":
      return new Arrakeen();
    case "TheGreaterFlat":
      return new TheGreaterFlat();
    case "BrokenLand":
      return new BrokenLand();
    case "RimWallWest":
      return new RimWallWest();
    case "PastyMesa":
      return new PastyMesa();
    case "TheGreatFlat":
      return new TheGreatFlat();
    case "HoleInTheRock":
      return new HoleInTheRock();
    case "FuneralPlain":
      return new FuneralPlain();
    case "BightOfTheCliff":
      return new BightOfTheCliff();
    case "Basin":
      return new Basin();
    case "SietchTabr":
      return new SietchTabr();
    case "RockOutcropping":
      return new RockOutcropping();
    case "CielagoSouth":
      return new CielagoSouth();
    case "TueksSietch":
      return new TueksSietch();
    case "SihayaRidge":
      return new SihayaRidge();
    case "Meridian":
      return new Meridian();
    case "SouthMesa":
      return new SouthMesa();
    case "GaraKulon":
      return new GaraKulon();
    case "RedChasm":
      return new RedChasm();
    case "HabbanyaRidgeFlat":
      return new HabbanyaRidgeFlat();
    case "HabbanyaErg":
      return new HabbanyaErg();
    case "HabbanyaSietch":
      return new HabbanyaSietch();

    default:
      throw new Error("Invalid territory: " + territoryName);
  }
}

function BaseTerritory() {
  var my = this;

  var occupyingFactions = [];
  var neighbors = [];


  my.getNeighbors = function() {
    loadNeighbors(this);
    return neighbors;
  }

  my.getNeighbor = function(neighborName) {
    loadNeighbors(this);

    for (var i = 0; i < neighbors.length; i++) {
      var neighbor = neighbors[i];
      if (neighbor.constructor.name === neighborName) 
      return neighbor;

    }

    throw new Error(
      "Invalid neighbor of " + this.constructor.name + ": " + neighborName 
    );

  };

  function loadNeighbors(that) {
  /* Set neighbors only when we need them */
    if (! neighbors.length) that.setNeighbors();
  }

  my.setNeighbors = function(neighborList) {
  /* setNeighbors() is a lazy load function that should only be called after
   * loadNeighbors() */
    
    this.setNeighbors = function() {
    /* Override setNeighbors() so it always uses the predetermined neighbor list 
     * passed in by the territory function at construction time */
      convertNeighborListToTerritories(this, neighborList);
    }

    function convertNeighborListToTerritories(that, neighborList) {
      var newNeighbors = [];
      for (var i = 0; i < neighborList.length; i++) {
	var neighbor = neighborList[i];
	var territory = that.map.getTerritory(neighbor);
	newNeighbors.push(territory);
      }
      neighbors = newNeighbors;
    }
  };

  my.getFactions = function() {
    return occupyingFactions;
  };

  my.occupyWith = function(troops) {
    occupyingFactions.push(troops);
  }

  return my;
}


PolarSink.prototype = new BaseTerritory();
PolarSink.prototype.constructor = PolarSink;

function PolarSink() {

  var my = this;
  my.name = "Polar Sink";

  var neighbors = new Array(
    "Arsunt", "ImperialBasin", "FalseWallEast", "HargPass", 
    "CielagoNorth", "WindPassNorth", "WindPass", "HaggaBasin"
  );

  my.setNeighbors(neighbors);
}

Arsunt.prototype = new BaseTerritory();
Arsunt.prototype.constructor = Arsunt;

function Arsunt() { 
  this.name = "Arsunt";

  var neighbors = new Array(
    "Carthag", "ImperialBasin", "PolarSink", "HaggaBasin"
  );

  this.setNeighbors(neighbors);
}

ImperialBasin.prototype = new BaseTerritory();
ImperialBasin.prototype.constructor = ImperialBasin;

function ImperialBasin() { 
  this.name = "Imperial Basin";
  var neighbors = new Array(
    "OldGap", "Arrakeen", "RimWallWest", "HoleInTheRock", "ShieldWall", 
    "FalseWallEast", "PolarSink", "Arsunt", "Carthag", "Tsimpo"
  );
  this.setNeighbors(neighbors);
}

FalseWallEast.prototype = new BaseTerritory();
FalseWallEast.prototype.constructor = FalseWallEast;

function FalseWallEast() { 
  this.name = "False Wall East";
  var neighbors = new Array(
    "ImperialBasin", "ShieldWall", "TheMinorErg", "HargPass", "PolarSink"
  );
  this.setNeighbors(neighbors);
}

FalseWallSouth.prototype = new BaseTerritory();
FalseWallSouth.prototype.constructor = FalseWallSouth;

function FalseWallSouth() { 
  this.name = "False Wall South";
  neighbors = new Array(
    "TheMinorErg", "PastyMesa", "TueksSietch", "SouthMesa", "CielagoEast", 
    "CielagoNorth", "HargPass"
  );
  this.setNeighbors(neighbors);
}

HargPass.prototype = new BaseTerritory();
HargPass.prototype.constructor = HargPass;

function HargPass() { 
  this.name = "Harg Pass";
  var neighbors = new Array(
    "FalseWallEast", "TheMinorErg", "FalseWallSouth", "CielagoNorth", 
    "PolarSink"
  );
  this.setNeighbors(neighbors);
}

CielagoNorth.prototype = new BaseTerritory();
CielagoNorth.prototype.constructor = CielagoNorth;

function CielagoNorth() { 
  this.name = "Cielago North";

  var neighbors = new Array(
    "PolarSink", "HargPass", "FalseWallSouth", "CielagoEast", 
    "CielagoDepression", "CielagoWest", "WindPassNorth" );

  this.setNeighbors(neighbors);

}

CielagoEast.prototype = new BaseTerritory();
CielagoEast.prototype.constructor = CielagoEast;

function CielagoEast() { 
  this.name = "Cielago East";
  var neighbors = new Array(
    "FalseWallSouth", "SouthMesa", "CielagoSouth", "CielagoDepression", 
    "CielagoNorth"
  );
  this.setNeighbors(neighbors);
}

CielagoDepression.prototype = new BaseTerritory();
CielagoDepression.prototype.constructor = CielagoDepression;

function CielagoDepression() { 
  this.name = "Cielago Depression";
  var neighbors = new Array(
    "CielagoNorth", "CielagoEast", "CielagoSouth", "Meridian", "CielagoWest"
  );
  this.setNeighbors(neighbors);
}

CielagoWest.prototype = new BaseTerritory();
CielagoWest.prototype.constructor = CielagoWest;

function CielagoWest() { 
  this.name = "Cielago West";
  var neighbors = new Array(
    "WindPass", "WindPassNorth", "CielagoNorth", "CielagoDepression", 
    "Meridian", "HabbanyaRidgeFlat", "FalseWallWest"
  );
  this.setNeighbors(neighbors);
}

WindPassNorth.prototype = new BaseTerritory();
WindPassNorth.prototype.constructor = WindPassNorth;

function WindPassNorth() { 
  this.name = "Wind Pass North";
  var neighbors = new Array(
    "PolarSink", "CielagoNorth", "CielagoWest", "WindPass"
  );
  this.setNeighbors(neighbors);
}

WindPass.prototype = new BaseTerritory();
WindPass.prototype.constructor = WindPass;

function WindPass() { 
  this.name = "Wind Pass";

  var neighbors = new Array(
    "HaggaBasin", "PolarSink", "WindPassNorth", "CielagoWest", "FalseWallWest",
    "TheGreaterFlat", "TheGreatFlat", "PlasticBasin"
  );
  this.setNeighbors(neighbors);
}

HaggaBasin.prototype = new BaseTerritory();
HaggaBasin.prototype.constructor = HaggaBasin;

function HaggaBasin() { 
  this.name = "Hagga Basin";

  var neighbors = new Array(
    "Tsimpo", "Carthag", "Arsunt", "PolarSink", "WindPass", "PlasticBasin"
  );
  this.setNeighbors(neighbors);
}

Carthag.prototype = new BaseTerritory();
Carthag.prototype.constructor = Carthag;

function Carthag() { 
  this.name = "Carthag";

  var neighbors = new Array(
    "Tsimpo", "ImperialBasin", "Arsunt", "HaggaBasin"
  );

  this.setNeighbors(neighbors);
}

PlasticBasin.prototype = new BaseTerritory();
PlasticBasin.prototype.constructor = PlasticBasin;

function PlasticBasin() { 
  this.name = "Plastic Basin";

  var neighbors = new Array(
      "BrokenLand", "Tsimpo", "HaggaBasin", "WindPass", "TheGreatFlat", 
      "FuneralPlain", "BightOfTheCliff", "SietchTabr", "RockOutcropping"
  );

  this.setNeighbors(neighbors);
}

ShieldWall.prototype = new BaseTerritory();
ShieldWall.prototype.constructor = ShieldWall;

function ShieldWall() { 
  this.name = "Shield Wall";

  var neighbors = new Array(
    "HoleInTheRock", "SihayaRidge", "GaraKulon", "PastyMesa", "TheMinorErg",
    "FalseWallEast", "ImperialBasin"
  );

  this.setNeighbors(neighbors);
}

TheMinorErg.prototype = new BaseTerritory();
TheMinorErg.prototype.constructor = TheMinorErg;

function TheMinorErg() { 
  this.name = "The Minor Erg";

  var neighbors = new Array(
    "ShieldWall", "PastyMesa", "FalseWallSouth", "HargPass", "FalseWallEast"
  );

  this.setNeighbors(neighbors);
}

Tsimpo.prototype = new BaseTerritory();
Tsimpo.prototype.constructor = Tsimpo;

function Tsimpo() { 
  this.name = "Tsimpo";

  var neighbors = new Array(
    "BrokenLand", "OldGap", "ImperialBasin", "Carthag", "HaggaBasin", 
    "PlasticBasin"
  );

  this.setNeighbors(neighbors);
}

OldGap.prototype = new BaseTerritory();
OldGap.prototype.constructor = OldGap;

function OldGap() { 
  this.name = "Old Gap";

  var neighbors = new Array(
    "Basin", "RimWallWest", "Arrakeen", "ImperialBasin", "Tsimpo", "BrokenLand"
  );

  this.setNeighbors(neighbors);
}

FalseWallWest.prototype = new BaseTerritory();
FalseWallWest.prototype.constructor = FalseWallWest;

function FalseWallWest() { 
  this.name = "False Wall West";

  var neighbors = new Array(
    "TheGreaterFlat", "WindPass", "CielagoWest", "HabbanyaRidgeFlat", 
    "HabbanyaErg"
  );

  this.setNeighbors(neighbors);
}

Arrakeen.prototype = new BaseTerritory();
Arrakeen.prototype.constructor = Arrakeen;

function Arrakeen() { 
  this.name = "Arrakeen";

  var neighbors = new Array(
    "OldGap", "RimWallWest", "ImperialBasin"
  );

  this.setNeighbors(neighbors);
}

CielagoSouth.prototype = new BaseTerritory();
CielagoSouth.prototype.constructor = CielagoSouth;

function CielagoSouth() { 
  this.name = "Cielago South";

  var neighbors = new Array(
      "CielagoDepression", "CielagoEast", "Meridian"
  );

  this.setNeighbors(neighbors);
}

TheGreaterFlat.prototype = new BaseTerritory();
TheGreaterFlat.prototype.constructor = TheGreaterFlat;

function TheGreaterFlat() { 
  this.name = "The Greater Flat";

  var neighbors = new Array(
      "TheGreatFlat", "WindPass", "FalseWallWest", "HabbanyaErg"
  );

  this.setNeighbors(neighbors);
}

TheGreatFlat.prototype = new BaseTerritory();
TheGreatFlat.prototype.constructor = TheGreatFlat;

function TheGreatFlat() { 
  this.name = "The Great Flat";

  var neighbors = new Array(
      "FuneralPlain", "PlasticBasin", "WindPass", "TheGreaterFlat"
  );

  this.setNeighbors(neighbors);
}

RimWallWest.prototype = new BaseTerritory();
RimWallWest.prototype.constructor = RimWallWest;

function RimWallWest() { 
  this.name = "Rim Wall West";

  var neighbors = new Array(
    "OldGap", "Basin", "HoleInTheRock", "ImperialBasin", "Arrakeen"
  );

  this.setNeighbors(neighbors);
}

BrokenLand.prototype = new BaseTerritory();
BrokenLand.prototype.constructor = BrokenLand;

function BrokenLand() { 
  this.name = "Broken Land";

  var neighbors = new Array(
    "OldGap", "Tsimpo", "PlasticBasin", "RockOutcropping"
  );

  this.setNeighbors(neighbors);
}

PastyMesa.prototype = new BaseTerritory();
PastyMesa.prototype.constructor = PastyMesa;

function PastyMesa() { 
  this.name = "Pasty Mesa";

  var neighbors = new Array(
    "GaraKulon", "RedChasm", "SouthMesa", "TueksSietch", "FalseWallSouth", 
    "TheMinorErg", "ShieldWall"
  );

  this.setNeighbors(neighbors);
}

HoleInTheRock.prototype = new BaseTerritory();
HoleInTheRock.prototype.constructor = HoleInTheRock;

function HoleInTheRock() { 
  this.name = "Hole In The Rock";

  var neighbors = new Array(
    "Basin", "SihayaRidge", "ShieldWall", "ImperialBasin", "RimWallWest"
  );

  this.setNeighbors(neighbors);
}

FuneralPlain.prototype = new BaseTerritory();
FuneralPlain.prototype.constructor = FuneralPlain;

function FuneralPlain() { 
  this.name = "FuneralPlain";

  var neighbors = new Array(
    "BightOfTheCliff", "PlasticBasin", "TheGreatFlat"
  );

  this.setNeighbors(neighbors);
}

BightOfTheCliff.prototype = new BaseTerritory();
BightOfTheCliff.prototype.constructor = BightOfTheCliff;

function BightOfTheCliff() { 
  this.name = "Bight Of The Cliff";

  var neighbors = new Array(
    "RockOutcropping", "SietchTabr", "PlasticBasin", "FuneralPlain"
  );

  this.setNeighbors(neighbors);
}

Basin.prototype = new BaseTerritory();
Basin.prototype.constructor = Basin;

function Basin() { 
  this.name = "Basin";

  var neighbors = new Array(
    "OldGap", "SihayaRidge", "HoleInTheRock", "RimWallWest"
  );

  this.setNeighbors(neighbors);
}

SietchTabr.prototype = new BaseTerritory();
SietchTabr.prototype.constructor = SietchTabr;

function SietchTabr() { 
  this.name = "Sietch Tabr";

  var neighbors = new Array(
    "RockOutcropping", "PlasticBasin", "BightOfTheCliff"
  );

  this.setNeighbors(neighbors);
}

RockOutcropping.prototype = new BaseTerritory();
RockOutcropping.prototype.constructor = RockOutcropping;

function RockOutcropping() { 
  this.name = "Rock Outcropping";

  var neighbors = new Array(
    "BrokenLand", "PlasticBasin", "SietchTabr", "BightOfTheCliff"
  );

  this.setNeighbors(neighbors);
}

TueksSietch.prototype = new BaseTerritory();
TueksSietch.prototype.constructor = TueksSietch;

function TueksSietch() { 
  this.name = "Tuek's Sietch";

  var neighbors = new Array(
    "PastyMesa", "SouthMesa", "FalseWallSouth"
  );

  this.setNeighbors(neighbors);
}

SihayaRidge.prototype = new BaseTerritory();
SihayaRidge.prototype.constructor = SihayaRidge;

function SihayaRidge() { 
  this.name = "Sihaya Ridge";

  var neighbors = new Array(
    "Basin", "GaraKulon", "ShieldWall", "HoleInTheRock"
  );

  this.setNeighbors(neighbors);
}

Meridian.prototype = new BaseTerritory();
Meridian.prototype.constructor = Meridian;

function Meridian() { 
  this.name = "Meridian";

  var neighbors = new Array(
    "CielagoDepression", "CielagoSouth", "HabbanyaRidgeFlat", "CielagoWest"
  );

  this.setNeighbors(neighbors);
}

SouthMesa.prototype = new BaseTerritory();
SouthMesa.prototype.constructor = SouthMesa;

function SouthMesa() { 
  this.name = "South Mesa";

  var neighbors = new Array(
    "RedChasm", "CielagoEast", "FalseWallSouth", "TueksSietch", "PastyMesa"
  );

  this.setNeighbors(neighbors);
}

GaraKulon.prototype = new BaseTerritory();
GaraKulon.prototype.constructor = GaraKulon;

function GaraKulon() { 
  this.name = "Gara Kulon";

  var neighbors = new Array(
    "SihayaRidge", "PastyMesa", "ShieldWall"
  );

  this.setNeighbors(neighbors);
}

RedChasm.prototype = new BaseTerritory();
RedChasm.prototype.constructor = RedChasm;

function RedChasm() { 
  this.name = "Red Chasm";

  var neighbors = new Array(
    "PastyMesa", "SouthMesa"
  );

  this.setNeighbors(neighbors);
}

HabbanyaRidgeFlat.prototype = new BaseTerritory();
HabbanyaRidgeFlat.prototype.constructor = HabbanyaRidgeFlat;

function HabbanyaRidgeFlat() { 
  this.name = "Habbanya Ridge Flat";

  var neighbors = new Array(
    "HabbanyaErg", "FalseWallWest", "CielagoWest", "Meridian", "HabbanyaSietch"
  );

  this.setNeighbors(neighbors);
}

HabbanyaErg.prototype = new BaseTerritory();
HabbanyaErg.prototype.constructor = HabbanyaErg;

function HabbanyaErg() { 
  this.name = "HabbanyaErg";

  var neighbors = new Array(
    "TheGreaterFlat", "FalseWallWest", "HabbanyaRidgeFlat"
  );

  this.setNeighbors(neighbors);
}

HabbanyaSietch.prototype = new BaseTerritory();
HabbanyaSietch.prototype.constructor = HabbanyaSietch;

function HabbanyaSietch() { 
  this.name = "Habbanya Sietch";

  var neighbors = new Array(
    "HabbanyaRidgeFlat"
  );

  this.setNeighbors(neighbors);
}

Fake.prototype = new BaseTerritory();
Fake.prototype.constructor = Fake;

function Fake() { 
  this.name = "Fake";

  var neighbors = new Array(
  );

  this.setNeighbors(neighbors);
}

