module.exports = GameController;

var DuneGame = require("Dune/Game");
var MapView = require("./View/Map");
var StartMenuView = require("./View/StartMenu");
var FactionSelectView = require("./View/FactionSelect");

function GameController() {

  var factions = [];
  this.views = {
    "map": new MapView(this),
    "start": new StartMenuView(this),
    "select":new FactionSelectView(this),
    "factions": {}
  };
  var turn = 0;
  var traitorPool = new Array();
  var that = this;

  this.game = new DuneGame();

  this.startGame = function() {
    that.game.start();
    this.views.select.hide();
    initFactionViews();


    initMapView();
  }


  function initFactionViews() {
    for (var i = 0; i < factions.length; i++) {
      var factionName = factions[i];
      var FactionView = getFactionViewConstructor(factionName);
      that.views.factions[factionName] = new FactionView(that);
    }
  }

  function getFactionViewConstructor(factionName) {
    switch(factionName) {
      case "Atreides":
      	return require("./View/Faction/Atreides");
      case "Harkonnen":
      	return require("./View/Faction/Harkonnen");
      case "BeneGesserit":
      	return require("./View/Faction/BeneGesserit");
      case "Fremen":
      	return require("./View/Faction/Fremen");
      case "Guild":
      	return require("./View/Faction/Guild");
      case "Emperor":
      	return require("./View/Faction/Emperor");
      default:
      	throw new Error("Invalid faction view: "+factionName);
    }
  }


  this.debugSetFactions = function (factionsArray) {
  /* This is a debug function and should go away once gameplay finalized */
    factions = factionsArray;
  }

  function initMapView() {
    that.views.map.show();
    that.views.map.loadImages();
  }

  this.startPlayerTurn = function() {
    var turnOrder = this.game.getTurnOrder();
    var faction = turnOrder[0];

    var factionView = this.views.factions[faction.constructor.name];

    //factionView.promptUserStartTurn();
  }  

}
