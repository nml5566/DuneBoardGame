module.exports = BaseFaction;

function BaseFaction() {
  this.name = "Base";

  var spice = 0;
  var troops = [];
  var leaders = [];

  assignTroops(troops);
  //assignLeaders(leaders);

  this.getTroopSize = getTroopSize;
  this.getTroops = getTroops;
  this.getSpice = getSpice;
  this.setSpice = setSpice;
  this.getLeaders = getLeaders;
  this.getLeader = getLeader;
  this.setLeaders = setLeaders;

  
  function getTroopSize() {
    return troops.length;
  }

  function getTroops(count) {
    if (count > troops.length) 
      throw Error("Not enough troops");

    var container = new BaseTroopContainer(this, troops.slice(0,count));
    return container;
  };

  function getSpice() {
    return spice;
  };

  function setSpice(value) {
    spice = value;
  }

  function getLeaders() {
    return leaders;
  }

  function getLeader(leaderName) {
    for (var i = 0; i < leaders.length; i++) {
      var leader = leaders[i];
      if (leader.name == leaderName) {
      	return leader;
      }
    } 

    throw new Error(this.name + " leader does not exist: "+leaderName);
  }

  function setLeaders(leaderArray) {
    leaders = leaderArray;
  }

  return this;
}

function assignTroops(troopArray) {
  for (var i = 0; i < 20; i++) {
    troopArray.push(new BaseFactionTroop());
  }
}

function assignLeaders(leaderArray) {
  for (var i = 0; i < 20; i++) {
    leaderArray.push(new BaseFactionTroop());
  }
}

function BaseTroopContainer(faction, troops) {

  var faction = faction.constructor.name;
  var currentLocation = undefined;

  this.getFaction = function() {
    return faction;
  }

  this.getSize = function() {
    return troops.length
  }

  this.getContents = function() {
    return troops;
  }

  this.occupy = function(territory) {
    if (currentLocation !== territory) {
      currentLocation = territory;
      territory.addTroops(this);
    }
  }

  return this;
}

function BaseFactionTroop() {
  var strength = 0.5;

  this.getStrength = function() {
    return strength;
  }

  return this;
}

//function BaseFactionLeader(leaderName, leaderStrength) {
  //var name = leaderName;
  //var strength = leaderStrength;
//}
