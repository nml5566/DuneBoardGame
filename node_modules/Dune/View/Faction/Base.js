module.exports = BaseFactionView;

var ViewDecorator = require("../Base");

function BaseFactionView(obj, args) {

  ViewDecorator(obj, { "view": undefined });

  var controller = args.controller,
      faction = args.faction,
      icon = args.icon;

  var factionIcon; 
  var factionShieldImage;

  var self = this;

  obj.loadImages = function() {

    var loader = new controller.Loader();

    var factionIconUrl = obj.iconPath + icon;
    factionIcon = loader.loadImage(factionIconUrl)

    loader.onload = function() {
      obj.drawPlayerSeat();
    };

  }

  obj.promptUserStartTurn = function() {

    canvasContainer = controller.canvasContainer;
    canvas = canvasContainer.layer('notification');
    context = canvas.getContext("2d");


    canvasContainer.moveLayerToTop(canvas);

    canvas.addEventListener("mousedown", function(e) {
      dismissUserPromptNotification();
    });



    var loader = new controller.Loader();
    var factionShieldUrl = "/img/atreides-shield.png";

    factionShieldImage = loader.loadImage(factionShieldUrl);
    factionShieldImage.speed = 0.01;

    loader.onload = drawUserPromptNotification;

  }

  function dismissUserPromptNotification() {
    context.clearRect(0, 0, canvas.width, canvas.height);
  }

  function drawUserPromptNotification() {

    factionShieldImage.xPos = 0;
    factionShieldImage.yPos = 0;

    factionShieldImage.yPos = -factionShieldImage.height;

    context.fillStyle = "rgba(20, 20, 20, 0.6)";
    context.fillRect (0,0,canvas.width,canvas.height);

    context.drawImage(
	factionShieldImage, factionShieldImage.xPos, factionShieldImage.yPos);

    moveImageToPoint(factionShieldImage, [0,250]);
  }

  function moveImageToPoint(image, point) {
    var finalX = point[0],
	finalY = point[1];

    image.xStep = (finalX - image.xPos) * image.speed;
    image.yStep = (finalY - image.yPos) * image.speed;

    image.movement = setInterval(function () {
      animateImageMovement(image, [finalX, finalY]);
    }, 10);

  }

  function animateImageMovement(image, point) {
    dimScreen(image);

    var x = point[0];
    var y = point[1];

    image.xPos += image.xStep;
    image.yPos += image.yStep;

    context.drawImage(image, image.xPos, image.yPos);

    if (image.yPos + image.yStep >= y) {
      clearInterval(image.movement);
      delete image.movement;
      delete image.xStep;
      delete image.yStep;

      dimScreen(image);

      image.xPos = x
      image.yPos = y

      context.drawImage(image, image.xPos, image.yPos);

      if (image.onhalt) {
	  image.onhalt();
	  image.onhalt = undefined;
      }

    }
  }

  function dimScreen(image) {

    context.clearRect(0, 0, canvas.width, canvas.height);
    context.fillStyle = "rgba(20, 20, 20, 0.6)";
    context.fillRect (0,0,canvas.width,canvas.height);
  }

 
  obj.getLeaders = function() {
    return faction.getLeaders();
  }

  obj.promptUserSelectTraitor = function() {
    var controller = this.getController();
    var traitorHand = controller.dealTraitorHand();
    displayTraitorCards(traitorHand);

  }

  function displayTraitorCards(traitorHand) {
    var mapViewElement = getMapViewElement();

    var traitorSelectionContainer = document.createElement("div");
    var title = document.createElement("p");

    var titleText = document.createTextNode("Choose a traitor");
    title.style.color = "black";
    title.style.backgroundColor = "white";
    title.style.fontSize = "50px";

    title.appendChild(titleText);
    traitorSelectionContainer.appendChild(title);
    mapViewElement.appendChild(traitorSelectionContainer);

    makeTraitorCardImages(traitorHand, traitorSelectionContainer);


  }

  function makeTraitorCardImages(traitorHand, traitorSelectionContainer) {
    var mapViewElement = getMapViewElement();

    var traitorCardImages = new Array();

    for (var i = 0; i < traitorHand.length; i++) {
      var traitorCard = traitorHand[i];

      var traitorCardImage = new Image();
      traitorCardImage.alt = traitorCard.name;
      traitorCardImage.style.cursor = "pointer";
      traitorCardImage.style.color = "black";
      traitorCardImage.style.backgroundColor = "white";
      traitorCardImage.style.fontSize = "100px";

      traitorCardImage.onclick = function() {
      	self.selectTraitor(traitorCardImage.alt);
	mapViewElement.removeChild(traitorSelectionContainer);
      }

      traitorCardImages.push(traitorCardImage);

      traitorSelectionContainer.appendChild(traitorCardImage);
    }

  }

  obj.selectTraitor = function(traitorName) {
    faction.setTraitor(traitorName);
  }

  obj.drawPlayerSeat = function() {

    var canvas = controller.canvasContainer.layer('playerseat');
    var context = canvas.getContext("2d");

    var mapView = controller.views.map;

    var circle = mapView.circle;
    circle.angle = mapView.convertSectorNumberToMapAngle(faction.seat);

    var iconOffset = factionIcon.width/2;

    var coordinates = 
      mapView.calculateSectorEdgeFromMapAngle([iconOffset, iconOffset]);

    var x = coordinates[0] - iconOffset;
    var y = coordinates[1] - iconOffset;

    context.drawImage(factionIcon, x, y);
  }
}
