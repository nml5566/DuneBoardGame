module.exports = BidMenuViewDecorator;

var canvasContainer = require("Dune/CanvasContainer");
var mapView = require("Dune/View/Map");
var caption = require("Dune/View/Caption");

function BidMenuViewDecorator(obj, args)
{

  var faction = args.faction;

  var notificationCanvas = canvasContainer.layer("notification");
  var notificationCtx = notificationCanvas.getContext("2d");

  obj.showBidMenu = function() 
  {

    var circle = mapView.circle;
    circle.angle = mapView.convertSectorNumberToMapAngle(faction.seat);

    var offset = (-0.35) * circle.radius;
    var coordinates = 
      mapView.calculateSectorEdgeFromMapAngle([offset,offset]);

    var bidMenuRadius = 220;
    var bidMenuSide = Math.sqrt(2) * bidMenuRadius/2;
    var bidMenu = {
      "side": bidMenuRadius,
      "x": coordinates[0] - bidMenuSide/2,
      "y": coordinates[1] - bidMenuSide/2
    }

   notificationCtx.lineWidth = 5;
    //notificationCtx.strokeStyle = "black";
    //notificationCtx.strokeRect(
      //bidMenu.x, bidMenu.y,
      //bidMenuSide, bidMenuSide
    /*);*/

    var bidPortraitHeight = 90;
    var bidPortrait = {
      "img": args.images.bid.portrait,
      "x": bidMenu.x,
      //"y": bidMenu.y + (bidMenuSide - bidPortraitHeight)/2,
      "y": bidMenu.y,
      "width": bidMenuSide,
      "height": bidPortraitHeight
    }

    //notificationCtx.strokeStyle = "red";
    notificationCtx.strokeRect(
	    bidPortrait.x, bidPortrait.y,
	    bidPortrait.width, bidPortrait.height
    );

    caption.draw("PASS");
    notificationCtx.drawImage(bidPortrait.img, bidPortrait.x, bidPortrait.y,
      bidPortrait.width, bidPortrait.height);

    var spiceBidRadius = 
      (bidPortrait.y + (bidMenuSide - bidPortraitHeight)/2 - bidMenu.y);
    var spiceBid = {
      "img": args.images.bid.spice,
      "x": bidMenu.x + bidPortrait.width/2 - spiceBidRadius,
      "y": bidMenu.y + bidPortrait.height,
      "radius": spiceBidRadius
    }
/*    notificationCtx.strokeStyle = "green";*/
    //notificationCtx.beginPath();
    //notificationCtx.arc(
            //spiceBid.x, spiceBid.y, spiceBid.radius, 0, 2 * Math.PI
    //);
    //notificationCtx.stroke();
    /*notificationCtx.closePath();*/

    notificationCtx.drawImage(spiceBid.img, 
	//spiceBid.x - spiceBid.radius, spiceBid.y - spiceBid.radius, 
	spiceBid.x, spiceBid.y,
    	spiceBid.radius * 2, spiceBid.radius * 2);

  /*  var raiseSpiceButton = {*/
      //"x": spiceBid.x + spiceBid.radius,
      //"y": spiceBid.y - spiceBid.radius,
      //"height": spiceBid.radius * 2,
      //"width": bidMenuSide/3
    //}

    
    //notificationCtx.strokeStyle = "orange";

    //[> raise spice button <]
    //notificationCtx.beginPath();
    //notificationCtx.moveTo(raiseSpiceButton.x, raiseSpiceButton.y);
    //notificationCtx.lineTo(
      //raiseSpiceButton.x, 
      //raiseSpiceButton.y + raiseSpiceButton.height
    //);
    //notificationCtx.lineTo(
      //raiseSpiceButton.x + raiseSpiceButton.width, 
      //raiseSpiceButton.y + raiseSpiceButton.height/2
    //);
    //notificationCtx.lineTo( raiseSpiceButton.x, raiseSpiceButton.y );

    //notificationCtx.stroke();
    //notificationCtx.closePath();

    //[> lower spice button <]
    /*showLowerSpiceBidButton(spiceBid, bidMenuSide);*/

  }

  function showRaiseSpiceBidButton()
  {
  }

  function showLowerSpiceBidButton(spiceBid, bidMenuSide)
  {
    var lowerSpiceButton = {
      "x": spiceBid.x - spiceBid.radius,
      "y": spiceBid.y - spiceBid.radius,
      "height": spiceBid.radius * 2,
      "width": bidMenuSide/3
    }

    notificationCtx.beginPath();
    notificationCtx.moveTo(lowerSpiceButton.x, lowerSpiceButton.y);
    notificationCtx.lineTo(
      lowerSpiceButton.x, 
      lowerSpiceButton.y + lowerSpiceButton.height
    );
    notificationCtx.lineTo(
      lowerSpiceButton.x - lowerSpiceButton.width, 
      lowerSpiceButton.y + lowerSpiceButton.height/2
    );
    notificationCtx.lineTo( lowerSpiceButton.x, lowerSpiceButton.y );

    notificationCtx.stroke();
    notificationCtx.closePath();

  }

}
