module.exports = Caption;

var canvasContainer = require("Dune/CanvasContainer");

function Caption() 
{

  var canvas = canvasContainer.layer('notification');
  var context = canvas.getContext("2d");

  var fontSize = 30;

  var captionText,
      captionTextAttr,
      captionBorderDimensions;

  var horizontalCenter = canvas.width/2;
  var coords = null;

  this.setCoords = function(newCoords) 
  {
    coords = newCoords;
    setCaptionDimensions();
  }

  this.setFontSize = function(newSize) { 
    fontSize = newSize;
    setCaptionDimensions();
  }

  this.setText = function(newText) 
  {
    if (! newText || ! newText.length)
      throw new Error("No caption text set");

    captionText = newText;
    setCaptionDimensions();
  }

  function setCaptionDimensions() 
  {
    setCaptionTextAttr();
    setCaptionBorderDimensions();
  }

  this.height = function() { return captionBorderDimensions.height }
  this.width = function() { return captionBorderDimensions.width }

  this.draw = function() 
  {
    drawCaptionBorder();
    drawCaptionText();
  };

  function setCaptionTextAttr() 
  {
    context.font = fontSize+"pt Arial";

    captionTextAttr = {
      "text": captionText,
      "padding": 20,
      "fontSize": fontSize,
      "font": fontSize+"pt Arial",
      "width": context.measureText(captionText).width,
      "height": fontSize
    };

  }

  function setCaptionBorderDimensions() {
    if (! coords) 
      coords = {
	"x": horizontalCenter - captionTextAttr.width/2 - captionTextAttr.padding/2,
	"y": 20
    };

    captionBorderDimensions = { 
      "buffer1": 8,
      "buffer2": 3.6,
      "width": captionTextAttr.width + captionTextAttr.padding,
      "height": captionTextAttr.fontSize * 2,
      "x": coords.x, "y": coords.y
    };
  }

  function drawCaptionBorder() {

    var border = captionBorderDimensions;
    context.beginPath();

    drawCaptionBorderBottomRight(border);
    drawCaptionBorderBottomLeft(border);
    drawCaptionBorderTopLeft(border);
    drawCaptionBorderTopRight(border);

    context.closePath();

    var transparentBlackStyle = "rgba(20, 20, 20, 0.6)";
    context.fillStyle = transparentBlackStyle;
    context.fill();
    context.lineWidth = 2.0;
    context.strokeStyle = "rgb(255, 255, 255)";
    context.stroke();

  }

  function drawCaptionBorderBottomRight(border) 
  {
    var borderWidth = border.x + border.width;
    var borderHeight = border.y + border.height;

    var startX = borderWidth;
    var startY = borderHeight - border.buffer1;

    var xMidpoint1 = startX;
    var yMidpoint1 = borderHeight - border.buffer2;

    var xMidpoint2 = borderWidth - border.buffer2; 
    var yMidpoint2 = borderHeight;

    var endX = borderWidth - border.buffer1;
    var endY = yMidpoint2;

    context.moveTo(startX, startY);
    context.lineTo(startX, startY);
    context.bezierCurveTo(
	xMidpoint1, yMidpoint1, 
	xMidpoint2, yMidpoint2, 
	endX, endY);
  }

  function drawCaptionBorderBottomLeft(border)
  {
    var startX = border.x + border.buffer1;
    var startY = border.y + border.height;

    var xMidpoint1 = border.x + border.buffer2;
    var yMidpoint1 = startY;

    var xMidpoint2 = border.x;
    var yMidpoint2 = yMidpoint1;

    var endX = border.x;
    var endY = yMidpoint2 - border.buffer1;

    context.lineTo(startX, startY);
    context.bezierCurveTo(
      xMidpoint1, yMidpoint1,
      xMidpoint2, yMidpoint2,
      endX, endY);
  }

  function drawCaptionBorderTopLeft(border) 
  {
    var startX = border.x;
    var startY = border.y + border.buffer1;

    var xMidpoint1 = startX;
    var yMidpoint1 = border.y + border.buffer2;

    var xMidpoint2 = border.x + border.buffer2;
    var yMidpoint2 = border.y;

    var endX = border.x + border.buffer1;
    var endY = border.y;

    context.lineTo(startX, startY);
    context.bezierCurveTo(
      xMidpoint1, yMidpoint1,
      xMidpoint2, yMidpoint2,
      endX, endY);
  }

  function drawCaptionBorderTopRight(border) 
  {
    var startX = border.x + border.width - border.buffer1;
    var startY = border.y;

    var xMidpoint1 = border.x + border.width - border.buffer2;
    var yMidpoint1 = border.y;

    var xMidpoint2 = border.x + border.width;
    var yMidpoint2 = border.y + border.buffer2;

    var endX = xMidpoint2;
    var endY = border.y + border.buffer1;

    context.lineTo(startX, startY);
    context.bezierCurveTo(
      xMidpoint1, yMidpoint1,
      xMidpoint2, yMidpoint2,
      endX, endY);
  }

  function drawCaptionText()
  {
    var xPos = coords.x + captionTextAttr.padding/2;

    var yPos = captionBorderDimensions.y + captionTextAttr.height 
      + captionBorderDimensions.height/4;

    context.fillStyle = "white";
    context.fillText(captionTextAttr.text, xPos, yPos);
  }

}
