var Loader = require("Dune/Loader");
var canvasContainer = require("Dune/CanvasContainer");
var mapView = require("Dune/View/Map");
var eventChain = require("Dune/EventChain");
var debug = require("Dune/Debug");

module.exports = DeckViewDecorator;

function DeckViewDecorator(obj, args) {

  var getCardImage = args.getCardImage;
  var deckImages = args.deckImages;

  var canvas, context;

  var mapDimensions = mapView.circle;

  var cardScaleWidth = 333,
      cardScaleHeight = 483;

  var xMapCenter = mapDimensions.centerX - cardScaleWidth/2;
  var yMapCenter = mapDimensions.centerY - cardScaleHeight/2;

  loadImages();

  function loadImages() 
  {
    var loader = new Loader();
    var deckImages = args.deckImages;
    var deckImagePath = args.deckImagePath;

    if (! deckImages) throw new Error("No images for DeckView");
    if (! deckImagePath) throw new Error("No image path for DeckView");

    for (var i = 0; i < deckImages.length; i++) {
      var deckImage = deckImages[i];
      var imgUrl = "/img/deck/" + deckImagePath + deckImage + ".png";
      deckImages[deckImage] = loader.loadImage(imgUrl);
    }
  }

  obj.dealCard = function(card) 
  {
    canvas = canvasContainer.layer("notification");
    var cardImage = getCardImage(card);
    setCardImageProperties(cardImage);

    moveDealtCardCardFromOffscreenRightToCenter(cardImage);
    pauseBrieflyThenMoveDealtCardLeftUntilOffscreen(cardImage);

    return cardImage;
  }

  setCardImageProperties = function(cardImg) {
    var xPos = mapDimensions.centerX - cardScaleWidth/2;
    var yPos = mapDimensions.centerY - cardScaleHeight/2;

    canvas = canvasContainer.layer("notification");
    cardImg.canvas = canvas;
    cardImg.xPos = canvas.width;
    cardImg.yPos = yPos;
    cardImg.speed = 0.02;
    cardImg.width = cardScaleWidth;
    cardImg.height = cardScaleHeight;

    return cardImg;
  }

  function moveDealtCardCardFromOffscreenRightToCenter(cardImg) {
    context = canvas.getContext("2d");

    canvas.redraw = function() { 
      context.clearRect(0, 0, canvas.width, canvas.height)
    }
    cardImg.moveToCoord([xMapCenter, yMapCenter]);
  }

  function pauseBrieflyThenMoveDealtCardLeftUntilOffscreen(cardImg) {
    cardImg.onHalt = function() {
      var timeout = 1000;

      if (debug.timeout !== undefined) timeout = debug.timeout;

      setTimeout(function() { 

	var xPos = 0 - cardScaleWidth;
	var yPos = yMapCenter;

	cardImg.moveToCoord([xPos, yPos]);

	cardImg.onHalt = function() {
	  canvasContainer.deleteLayer(canvas);
	  eventChain.next();
	}
      }, timeout);
    }
  }

}
