var canvasContainer = require("Dune/CanvasContainer");
var Loader = require("Dune/Loader");
var eventChain = require("Dune/EventChain");
var stormDeckView = require("Dune/View/Deck/Storm");
var spiceDeckView = require("Dune/View/Deck/Spice");
var gameView = require("Dune/View/Game");
var mapView = require("Dune/View/Map");

module.exports = new RoundView();

function RoundView() 
{

  var canvas = canvasContainer.layer('roundscreen');
  var context = canvas.getContext("2d");
  var timeout = 2000;
  var stormMovement;
  var game = gameView.game;

  var roundMarkers = {
    "storm": {"x": 174}, 
    "spiceblow": {"x": 221}, 
    "bidding": {"x": 269}, 
    "movement": {"x": 457},
    "battle": {"x": 504},
    "collection": {"x": 552}
  };

  loadRoundMarkerImages();

  function loadRoundMarkerImages() 
  {
    var loader = new Loader();

    for (var m in roundMarkers) {
      var url = "/img/rounds/" + m + ".png";
      roundMarkers[m].img = loader.loadImage(url);
    }

    loader.onload = setRoundMarkerDimensions;
  }

  function setRoundMarkerDimensions() 
  {
    var markerScale = 43;
    var yPos = 21;

    for (var marker in roundMarkers) {
      var props = roundMarkers[marker];
      var img = props.img;
      img.xPos = props.x;
      img.yPos = yPos;
      img.width = img.height = markerScale;
    }
  }

  this.start = function() {
        eventChain.add([
      function() { storm() },
      function() { mapView.moveStormNumberOfSectors(stormMovement) },
      function() { spiceBlow() }
    ]);
    eventChain.next();
  }

  function storm() 
  {
    drawMarkerImage("storm");
    var stormCardImg = stormDeckView.dealCard();
    stormMovement = stormCardImg.stormMovement;
  }

  function spiceBlow() 
  {
    drawMarkerImage("spiceblow");
    addSpiceBlowEvents();
    eventChain.add(bidding);
    eventChain.next();
  }

  function addSpiceBlowEvents() 
  {
    var spiceCards = game.spiceBlowRound();
    for (var i = 0; i < spiceCards.length; i++) 
    {
      var spiceCard = spiceCards[i];
      addSpiceBlowEvent(spiceCard);
    }
  }

  function addSpiceBlowEvent(spiceCard) 
  {
    eventChain.add(function () { spiceDeckView.dealCard(spiceCard) });

    //TODO: deal with worm removing spice/troops from last territory drawn
    if (spiceCard.isWorm) return;

    var territoryView = mapView.getTerritory(spiceCard.territory);
    eventChain.add(function () { territoryView.animateSpiceBlow(spiceCard) });
  }

  function bidding() 
  {

    console.log('bidding round');
    drawMarkerImage("bidding");
    var controller = require("Dune/Controller");
    controller.startPlayerBidding();
  }

  function revival() 
  {
    console.log('revival round');
    context.clearRect(0, 0, canvas.width, canvas.height);
    setTimeout(eventChain.next, timeout);
  }

  function movement() 
  {
    console.log('movement round');
    drawMarkerImage("movement");
    setTimeout(eventChain.next, timeout);
  }

  function battle() 
  {
    console.log('battle round');
    drawMarkerImage("battle");
    setTimeout(eventChain.next, timeout);
  }

  function collection() 
  {
    console.log('collection round');
    drawMarkerImage("collection");
    setTimeout(eventChain.next, timeout);
  }

  function drawMarkerImage(markerName) 
  {
    var img = roundMarkers[markerName].img;

    context.clearRect(0, 0, canvas.width, canvas.height);
    context.drawImage(img,
      img.xPos, img.yPos,
      img.width, img.height);
  }

}
